
#encode bye gumball watterson
#selamat mencoba
import base64
exec (base64.b64decode ('
#encode bye gumball watterson
#selamat mencoba
import base64
exec (base64.b64decode ('CiNlbmNvZGUgYnllIGd1bWJhbGwgd2F0dGVyc29uCiNzZWxhbWF0IG1lbmNvYmEKaW1wb3J0IGJhc2U2NApleGVjIChiYXNlNjQuYjY0ZGVjb2RlICgnQ2lObGJtTnZaR1VnWW5sbElHZDFiV0poYkd3Z2QyRjBkR1Z5YzI5dUNpTnpaV3hoYldGMElHMWxibU52WW1FS2FXMXdiM0owSUdKaGMyVTJOQXBsZUdWaklDaGlZWE5sTmpRdVlqWTBaR1ZqYjJSbElDZ25RMmxPYkdKdFRuWmFSMVZuV1c1c2JFbEhaREZpVjBwb1lrZDNaMlF5UmpCa1IxWjVZekk1ZFVOcFRucGFWM2hvWWxkR01FbEhNV3hpYlU1MldXMUZTMkZYTVhkaU0wb3dTVWRLYUdNeVZUSk9RWEJzWlVkV2FrbERhR2xaV0U1c1RtcFJkVmxxV1RCYVIxWnFZakpTYkVsRFoyNVJNbXhQWWtkS2RGUnVXbUZTTVZadVYxYzFjMkpGYkVoYVJFWnBWakJ3YjFsclpETmFNbEY1VW1wQ2ExSXhXalZaZWtrMVpGVk9jRlJ1Y0dGV00yaHZXV3hrUjAxRmJFaE5WM2hwWWxVMU1sZFhNVVpUTWtaWVRWaGthVTB3YjNkVFZXUkxZVWROZVZaVVNrOVJXRUp6V2xWa1YyRnJiRVJoUjJ4YVYwVTFjMVJ0Y0ZKa1ZteHhWMVJDWVZJeFduRlpha3BUWWtWc1JGb3lOVkpOYlhoUVdXdGtTMlJHVW5WWGJVWlRUVlphZFZZeFl6RmpNa3BHWWtWb1lWSkZXbkJXYWtKM1lqRnNjbHBFVG1GTmJFWTFWVzF3UTJFeFNYaFhhbFphWld0ck1WcEdWazlqUmxKMVkwZEdWMDB5YUhaWFYzaHJVakF4Um1KRmFFNVdNMmh3V1d4Vk1VMXNaRmhOVlZwVVRXdGFXVlJXYUd0aFZUQjNZak5rVkZaWFVreFpWV1JPWlZaYVZWTnJPVkpYUlVwNlYyeFdhMVl5Um5KaVJWSm9Vako0WVZZd1ZURmpNVkowWTBaS2ExWnRlSGhXTVZKRFdWWkplRmR1UmxwaGEzQlVXV3RXYzFKR2IzbE9Wa3BPWWxob1VWZFhkR3RUTWxKSFZXNVdXR0pWV2xSVVZscGhaRlpaZUZsNlJtcE5hM0JIV1d0V2IxbFdTa1pYYmtKWFlXdEtNMWxxUm5OamJIQkZWRzFHVG1KRldURldWekYzVVRKRmVGTllhRmhoYkZwaFdsZDBjazFXY0VkV2F6bHFVbXhLTVZrd1pFZFdNREI1WVVoYVdGWXphSEpWYWtGNFVtMUtSbUZGTlZkTk1taDNWMWQ0VmsxVk1YTmFSbWhPVmxad1ZWUlhkR0ZYVmxKWFlVZDBhRlpVUWpOWmFrNXJWa1phV0ZWcmVGcFdWMUpQV2xaYVlWWldUbkpQVmtwWVVsVndObFl5ZUZkaE1WbDVVbTVLYVZKV1NtOVZha28wV1ZaWmQxWlVSbXBOVmtvd1dUQmFTMkV4V25SbFNHaFhUVlpLUkZkV1drcGxSbVIxVW14d2FHRXpRbFZYVjNSWFl6RktSMkl6YkU5V2EzQlBXV3hvYjFWV1pGaGtSM1JVVFd4S1NGWlhOVmRYUjBwV1YyeFNWVlpzY0doYVJscGFaVVpzTmxKdGNFNWhNMEpJVjFkMFYySXhiRmRUYTFwWVltdEtXRmxYZEV0Tk1XeHhVbTVPYW1KSVFrWldSekZIVkcxS1JsZFVSbGRXZWtZelZWUktSbVZHVGxsaFJtaG9Za1p3YUZkc1pEQmphekZYWTBWa1YyRjZiSEZWYlhoTFRWWnJkMXBGWkZkTlJFSTFXVlZvWVZkR1dYcGhTRXBXWVd0R05GVnRNVXRTYlVaR1RsWmtUazF0YUROV01XUTBWbXN4VmsxWVRtRlNiV2hQVm14YWQxWldVbGhrUjBaWVZteEtXRmxWWkRCaFJscFZVV3BPV21Gck5YSldhMXBoVjBaV2NtVkdjRmRXTVVwUVYyeGFZVmxXV2xkVWJrcFFWbXR3V1ZWc1ZuZE9iRmw1WlVaa2FFMVdiRFZWYlRWTFlWWktWMU50T1ZaaGEyOHdWMVphV21ReFdsVlNiWEJPVm10dmQxZFVRbUZUTWtWNFYyNVNiRk5IYUZoVVZscExVa1prVjFkcmNHeFNiVkl4VlcxNGQyRkhSWHBSYkZaWVZqTlNXRmw2Umt0U01rbDZZa1U1VjJFelFsQlhWM2h2WWpGV1YxcEdhR3RTTTFKVlZGZDRTMU5HV2xoT1ZtUllVakJ3VjFZeWVGTldWbHB6WTBkb1lWSnNjR0ZhVlZwelRteEtkR05GTldoTk1FcEpWakZrTUZZeVNYaGlSbVJVWVRGd1dWbHRkRXRYUm14WVpFVjBUazFYZUhoVmJUVlBZVzFLU1ZGcldsZFNla1pJVmtjeFMxSnNaRlZTYkdSWFpXdFplbFpXVWt0U2JWWkhWR3hzYUZKdGFHOVphMXAzWVVaa2MxcEVRbXBoZWtaWVdUQldhMVl5UmpaaVNFWldZbGhvVEZSV1duSmtNWEJHV2taa1RsSkZTVEZYVmxadldWWmtSMWRZY0doVFJYQlhXVmQwUjA1R1ZuUk5WWFJUWWxWYVIxUnNXbXRVYXpGMFlVUk9WMDFYVVRCV2JYTjRWbXN4V1ZSdFJsTmlWMmhRVm0xNFlXUXhXbGRWYkdoclVqQmFXVlp0ZUV0WFJteFdXa1JDYUZKc2NGWlZWM0JQVjIxR2NrNVlTbGRoTVhCb1ZqQmFWMk50VmtkalJtUlhUVlZ3VVZZeWVHRlpWbXhYVjJ4a1ZXSnJjRkZXYlhSM1YxWldjMVp1WkU5aVJtdzFXbFZhYTJGRk1WZGlSRlpXWWxSV1RGbFdXa3RXTVU1MFQxWmFhR0V5T0hkV01WcGhWMjFSZUZkc1ZsTmlXRUpQVm0xMGRtUXhaRlZSYlVaVVRXdFdORll5TlZOaVJrNUlZVVpvVlZac2NFeFZhMXByVmpGa2NtTkhlRk5pVmtsNFZsY3hOR1F5UmtoU1dIQlNZa1phV1ZacVRsTlhSbXcyVW10MFUwMXJiRFpaYTFVMVZqSkZlbEZzUWxoV00yaDJXV3BHVjFZeGNFZGhSM1JUVFRGS1ZsWkdaRFJUTVU1SFYyeG9UMVp0VWxsVmFrSjNWakZaZVdWR1RsZFdiSEI2V1RCa2IxbFdTbk5qUjBaaFZsWndlbFJ0ZUV0a1IwNUdUbGRvVGsxRmNFcFdha1pyVFVaWmVWTllhR2xTYlZKVldWUkdkMWRXYkhSa1JYUllVbTE0V1ZwRlZqQlVhekZZWlVob1ZtSlVWbEJaVnpGTFUxWkdjbGRzWkZObGExcEpWbXRqZUZNeFNuTmFSbFpUWWtkU1dGcFhkRnBsYkZwWFZXdDBVMkpXV2toV1IzaHpZVVpLZEdGSE9WcGhNWEF6V1ZWYWEyTXhjRVZSYlhCb1pXdGFXVmRVUWxkaE1WbDVVbXBhYVZORldsZFpiR2h2VkVaU1YxZHVTbXROV0VKSFYydGFhMVJzU2taVFZFWllWbXhhZGxkV1dtdFNNV1JaWTBkb1ZGSllRbGhYVm1Rd1VqQTFSMVp1VWs1V1dGSlVXV3hXWVZJeFVuTlhiWFJWWVhwR01GbFZVazlXTURGWVZWUkNWMkpZVGpSV2JYTjRWMVpTZEZKc1RtbFdNbWhSVm0weE5GbFhVWGhYYkdSV1lrZG9jbFZxUW1GWFZscDBaVVYwV0ZKdGVGZFhhMUpEWVVaS2MyTkdXbFpXTTBKUVZqSXhSMk5yTlZsVGJHUm9UVmhDYjFacVFtRldNazUwVm10a2FsSnRVbGhVVmxaM1ZWWlplV1ZIUmxwV2JYaFlWako0YTFaWFNuSmpSa1pYWWxoU00xWXhXbGRqTVZwMVdrVTVhVkp0ZHpGWGJGWmhZVEpHUmsxV1pHbFNSbHBYV1d4U1YxUkdiRmRYYTNSWFRWVTFNRlF4V21GaFIwVjVUMGhrVjAxV2NHaFdNakZTWlVaa2MxWnNUbWxYUlVwUVZtMHhNR1J0VVhoYVJsWlNZbFZhVlZSWGRGZE9SbGw1VGxaT2FWSnJOVWxaVlZwdlZsWmFjMk5GZUZaaE1YQnlWbXBHYTJOdFRraGxSazVwVm10c05GWnNZM2hPUjFGNVVtdG9VMWRJUWxOWmExcGhWMVphY1ZSc1RsaFNiWGN5VlcxME1GVXdNWEppUkZwYVlURlZNVlpxU2tabGJFWnpVV3hvVjAweWFESlhWM0JIVmpGWmVHTkZaR2hTTTFKVVZGUkdTMVpzV2tkYVJGSlVUVlUxU0ZZeWVHOVVNVnAwVld4c1ZtRnJTak5XYWtaYVpWZFdSMVJzWkZkaVNFSTJWMVJDYTJJeGJGZFRiazVxVWpCYWFGWnNXbmRsYkZKMFpVVjBhMUl3TlVkVWJHUnZWR3N4Um1ORmNGZGhhMXB5VkZWYVdtVldUbGxoUjJ4VFlsWktWbGRXVWtka01XUlhZa2hTYTFKWVVsbFZiVEUwVjFad1JsWnFRbFZoZWtaWldsVm9iMVp0U2xWV2JFSmFWbnBHVEZVeFdrZGpiR1J6V2taT2JHRXhjRXBXYlhScVpVWk5lRk51VG1GU2JGcFVXV3RrVTFkR2NGaGtSbkJzWWtad1dGWlhkREJWTWtwWFYydG9WMUl6YUhwWlZWcExaRWRHU0U5V2NHaE5XRUY2VjFaV1lXRXlUWGhqUlZaU1lsaENiMXBYZEdGWFZtUlZVV3hrYUUxV2JEVlZiWEJoWVZaT1JsZHNaRnBpUjJoMlZrVmFVMVl4WkhWVGJYUk9WMFZLU0ZZeWRHRmhNVkp6VTJ0YVZGWkZXbGxXYlhoaFpHeGtWMWR0ZEZOTlYxSmFXVEJrYjFaR1NsbFJiR2hZVm0xUmQxVnFRVEZTTVZwMVZXczFWMWRHU2xWWFYzaFhXVlpKZUZWdVRsaGlXRkpXV1Zod1IwMUdiRlpWYXpsWFRVUkdXVlpXVWtOV01rcFpWR3BTVjJKWVRqUldNVnBUWkVaS2MxUnRiRmROYldoU1ZtMHdlRTVHYkZoVldHaFlZa2RTVjFsclpHOWpiRlp4VVcxR1dGWnNjREJhVlZZd1YwWktkR1ZHWkZoaE1VcEVXVlZhUzJNeVRrZFhiRnBYVFRCS1VWWnFTWGhTTWs1eVRsWnNWR0pIVW05VVZtaERZakZhY1ZGdFJsZE5helV3Vm0xMGEyRnNTblJWYkdoVlZteGFNMVpXV2xwbFYxWklVbXh3VjJKWWFGbFdha28wWVRGYVdGTnVTbXBTYTFwWVdXeG9VMDB4V1hoWGJHUnFUVlp3TVZkclZUVmhWa3AwWkhwR1dHSkdXbWhaVkVwSFVtc3hWMXBIYkZOU2JIQllWMWQ0VTFZeFVrZGlSbVJZWVROU1dGUldWVEZOUmxGNFYyMUdhRkl3VmpWVU1HaHJWakF4VjJOSGFGZE5ha1pUV2xWYWEyTXhXbk5VYld4WVVsVndVVlp0TUhoTlIxSjBWVmhvWVZKc1dsTlpiRlpoVmxaU1dHUkdaRTlTYkd3MVZHeGFUMkZXU25KT1ZXeGFWbFp3ZGxac1dtRmpNazVHWlVaYWFFMVlRbmxXYlhCSFlUSk9kRlJyYUd4U2F6VndWbTEwYzA1R1duTlpNMmhQVWpGR05WVnRkRzlWTVdSSlVXeE9XbUV4Y0doV01WcGhZMVpTYzFSc2FGTmlXR041VmxjeE1FMUdWWGROV0VwcFVrWndZVmxVUmxaTlZscHhVMnRhYkdKRlducFZWM2h2VmpBd2VXRkVTbGhXTTBKSVZtcEdXbVZIVGtaYVIyaFRUVEZLVlZaR1VrZFRNVnB6VjJ0a1lWSkdTbFZVVmxVeFUwWlplV1ZIT1ZWTlZuQXdWbGQ0YzFadFJuSlRhazVYWVd0YVlWcFdaRmRTTVZKeldrWmthVk5GU1RKV01WSkRZVEpKZUdKR1pGUmlhelZ4VldwQ1lXRkdXbk5YYm1Sc1lrWktNRnBWVmpCaE1VbDNUbFZrVldKSFVuWldSM040VW0xT1JtTkdaR2hoTVhCNVZrWldZVmR0VmxkVWJHeG9Vako0VkZsc1drdFdiR1JYVld0a2EwMVhVbGhaYTJoVFlURktXVlZzYkZaaVZFVXdWakZhZDFKc1duRlJiRlpvWld0YVdsZHNWbTlpTVZwMFUyeFdWMkpGU21GV2JuQkhWRVpWZUZkclpHcGlSMUo2VjJ0YVQySkhSWGhqUlhCWFlsaFNjVnBWV2s1bFJrNTFWRzFHVTJKR2NGVlhWM1JyVlRGa1IyTkdhR3RTYmtKeldXdGFkMWRHV2xoa1JFSldUV3R3V0ZZeWRHOVdNVWw2WVVod1dsWldjRXhhUldSSFUwVTVWMk5IYUU1WFJVWTJWakZhVjFsWFJYbFVXR2hxVWxaYVUxbHNhRU5pTVhCWVpFZEdXRlp0VWxaVlYzaHJZVVV4VjJKRVZsWmlXRUpvV1ZaYVQxSnNaSE5hUm5CcFVqSm9NbFpyVm1GVk1WbDRXa2hXVkdKWVVrOVdNRlpMVTBaWmVXUkhSbWhOVmtwNlZUSjBZVlpHV2taWGJHeFhZbGhvYUZwSGVHdFdNV1IwWkVaT1RsWXhTbUZYVkVKcllqRmFSMU5zYkZKaVIyaFpWbTB4VW1ReFZuRlJWRVpUVFZad01WWlhjekZXTVdSSFUyeFdXRll6YUZoWFZscEtaVVpXZFZSc2FHbFhSa3BYVjFab2QxSXdNVWRpUmxwV1lYcHNXRlJWVWtkWFZscFhWV3RPVjAxcmNGcFdSM0JUVmpKS1dWUnFVbGROVm5CVVdrVmFTMk14VW5SaVJtUk9ZbGRvVTFadE1IZGxSVFZIWWtab1ZsZEhhRmxaYTJSVFZqRnNjbHBIT1dwaVJscDRWVmN4UjFkR1duTmpSRUpoVmxaWmQxWXdXa3RrUjFaSFdrWm9hRTFWY0VWWFZsWmhVekpOZVZSclpGaGlSbkJZVkZSQ1MxVldXbkZUV0doVFRXczFlVlJzV25OV1IwcElWVzA1VlZadGFFUlpha1poWTFaR2RGSnNaRTVoZWxWM1ZtMHhNR0V5Um5OVGJsSldZa2RvVmxadGVHRk5NVnBYVjJ4d2JGWXhXa2xWYlhoM1ZqSktXV0ZHYkZkaGEyOHdXVlJHWVZkR1RuVlRiWEJUWVRGd1dWZFhlRzlWTURCNFYxaG9XR0pIVW5GVVZscDNUVlprY2xaVVZtaFdhM0F3V2tod1IxZEhTa2RYYldoYVZrVndTRlZ0YzNoV01YQklZa1pPVTJKSVFsbFdNV1EwVlRGWmVGVnJaR2xTYlZKWldWUk9VMWRHVWxkV1ZFWk9VbXhHTkZZeU1VZGhSa2wzVm1wV1ZVMUhhSEpXYWtGNFZqSk9TR0ZHWkU1aGExcFVWMnhXWVdFeVRYaFhiazVWWWxkNFdWVnNWbmRWVmxwMFRVaG9UbEl4U2pCV1ZtaHZXVlpLYzFkc1RscGlSbHBvVm14YVUxZEhVa2RhUlRsVFlrZDNNVlpIZUdGVU1rWlhVMjVLVDFaWGVHRldiRnAzWkd4YWMxZHRSbXBOYXpWSFdsVmFZV0ZGTVZsUmJteFhZbGhDU0ZsVVNrOWtSbEp5WVVkNFUyRjZWbmRXYlRFd1l6QTFSMWR1VGxwTk1taFFWV3BHUjA1V1ZuUmtSemxXVFZkU1NsVlhlRTlYYlVWNFkwZG9WMDFXY0doWk1WcFRZekZTYzJGR1RtbFhSMDQxVm14amVFMUZNVWRXV0dST1YwVndjRlZyV25kWlZteFZVbXhhVGxac2NIaFZNblF3WVcxS1JrNVljRnBoTVhCMlZtcEJkMlZYUmtkaFJtUlRZa1p3V0Zkc1ZtRlRiVlpJVkd0YWFWSnNTbkJWYlRWRFpHeGFSMVZyWkZSTlZuQjZWMnRhYjJKR1NYZFhiVVpYWVd0YWFGcFhlRnBsVjFKSVQxWldUbFp1UWxwV2JHUTBZVEZrZEZOclpGaGlSMmhXV1d4b2IxZEdXWGRhUm1SVFRWWktlbGt3V210aFZrbzJZVVJXVjJKSFVUQlpha3BTWlVaa2MxcEdhRmhUUlVwMlZsY3dlR0l4WkVkaVNFcFlZbTFTVjFWdGVITk9SbGw1VGxkMFZrMXJXVEpXYlhodlYwZEZlRlpZYUZkV1JWcE1XWHBLVDFKdFZrZGFSMnhZVWpKb1ZsWnNhSGRSYlZaSFZHdGtWV0pIZUc5VmJURlRWMVpXY1ZSdE9WZGlSMUpaVkZaU1EyRXdNVmRqUm1oYVlURndXRlpzWkV0U2F6VlhZVVpXVjJKV1JYZFdiVEUwVmpKU1NGVnJWbEppUm5CUFZteG9RbVF4WkhOV2JFNVNUVmQ0V0ZZeWVHdGhiRXB5VTJ4b1dsWXpVak5XUlZwWFpFVXhWazlXVGxkaE0wSTJWMVpXYTJJeFVuUlRhMXBZVjBoQ1dGbHNhRk5qVm5CV1YydHdhMDFFVmxwV1IzaHZZVlpKZW1GSE9WZFdla0kwV1dwR2ExSXhWbk5XYkU1b1RURktVRmRYZEdGa01ERkhZVE5rVjJGclNsZFVWM1IzVjBaWmVXUkhPVmRoZWtZeFdWVm9kMWRHV25OalJYaGFUVzVOZUZZeFdrZGpNazVJWVVVMWFWWXlhRWRXYlRCM1pVVTFSMkpHYUZaaE1YQlFWbTB4TkdGR1ZuUmpla1pWVFZaYWVWWnRkSGRVYkVwMFZXeHNZVkpYVWtoV01uaGhaRWRXUjJGR1drNWliV2cyVm0wd2VGTXlUblJVYTJSaFVtNUNjRlZ0ZEhkWFZscFlaRWRHVjJKV1draFhhMmhYVmxkS1NGVnVRbFpOUmxwTVZYcEdZV05zYTNwaFIyeE9WbXhaTVZaVVNqQmpNVlowVTJ0b2FGSnRlRmhaVkVaaFZFWmFjbGR0Um1wV2EzQjZXVEJrTUZSc1NrWlhiVVpYWWxSQ05GbHFSbUZTTVU1ellrWkthVkl4U2xwV2JURTBVekZPUjFkdVJsSldSVnBVVkZaa1UwMVdWblJsUms1b1VsUkNORlV5ZUZkV01VcDBWVmhrWVZKRldsQlZha1pyWXpKR1NHVkdUazVOVlhCWVZqRmtORll5VVhoVFdHaG9UVEpTYjFWcVFtRlhSbEpZWkVoa1ZGSnNWalZhUlZwUFYwWktjMk5JY0ZwTlIyZ3pWbXBCZUZJeVRraGhSMFpUWWtoQ1ZWZHJWbXRVTVVsNFZXNU9ZVkpVVmxoV01GWkxWMnhhZEdORlpGcFdiRlkwVlcwMVMxUnNXblJoUmxwWFRVZFNkbGt3V2xaa01WcDFXa2RzVGxac2NEWldiWGhUVWpGa1IxZHVUbXBTUlVwb1ZteGtiMk5zV1hkWGJVWnFUVlUxZWxsVldtOVhSazVHVTJ4c1dGWnNXbWhWZWtwT1pWWk9jbFpzVm1sVFJVcFFWbGN3TVZFd05YTlhibEpxVWxkU1ZWUlZVbGRsYkZaMFpVaE9hRkpyY0RCV1YzTTFWMnhaZWxWdGFGWk5SbkJ5V1hwR2EyUkdTbk5YYXpWWFltdEtXbFpzVWtwTlZsRjVVbTVPVkdKc1NsZFphMlJ2V1Zac2MyRkdUbFJTYkVvd1dsVmtSMkZyTVZkWGJteFhVbnBHZGxaSGVHRldWa3BWVVd4a2FFMXNSWGRYVmxKSFlURk9SMVJ1VmxWaVJrcHdWVzEwZDJGR1duRlJiVGxTVFZkU1NGWXhhRzlYUjBwSVZXNUdWMkpZVFhoVVZWcDNVbXhhVlZac1drNWhNMEpLVjJ0b2QxSXhaRWhTV0doWVlsZG9ZVlpyVm5kVFJscDBZek5vVjAxWVFrbFphMXBQVlRKS1NWRnNjRmRpVkVZelZrUktTbVZXVW5WVWJXeFRZbFpLV1ZacVFtdFZNazE0VjI1R1UySlZXbFZXYlRFMFZqRlplVTFWWkdoU2EzQldWVzE0YjFkck1VaFVWRVpYWVd0YWNsVXhXa2RqYlVaSFdrZG9hRTB3U2xKV2JURjNVakZOZVZWc1pGaGliRXBVV1d0Vk1WUXhVbFpXYm1SV1ZteHdNRlJXYUd0Vk1ERldUVlJTV0dFeWFGQldNR1JHWlZaV2MySkdjR2xTYkhCdlYxZHdSMVV4WkVoVmEyeGhVbXhLVkZsclpETk5WbHBJWlVkR1ZVMXJXbGhWTWpWTFlXeEtSbGRzWkZkaGF6VjJXVEo0WVdOV1RuSmtSM1JYWVRGd05WZFdWbXRTTVZWM1RVaHNhRkp0YUZsWmExcDNZMnhhY1ZKcmRHcGhlbXhZVjJ0YVYyRldXWGxoU0hCWVZqTlNhRnBFUm5OV01XUjFVMnhhYUUxc1NtaFdiWEJEWXpBMVIxZFlhR2hUUlRWWVZXcENkMU5XYkZaWmVsWlhZbFZ3V2xsVlZqUldNREZYWTBkb1lWSlhVbGhWTVZwM1VqSkdSMVJ0YkZOWFJVcGFWbTB4ZDFNd05VaFNXR3hUVjBkb1ZWbHRjekZXVm14MFRWUlNXRkp0ZUhwWlZXTTFWMFpLZEdWR2FGZE5ibWd6V1d0YVdtUXhaSEpoUm1ScFYwZG9lVlpzVWt0VE1WcHlUVlpXVm1KSGFGaFVWRUpMVWtaYVIxZHRkRlZpVmxwSVdUQldhMkZXU1hsbFJsSlZWa1Z3ZGxac1dtRmtSMUpJWkVVNVUySklRa2xXYWtvd1lURmtTRk5zV2xoaWEzQldWbTB4VTFaR1dYZFhiSEJzVmpGS1NWUXhXbGRVYkZwMVVWaGtWMkpIVVRCWmFrWmhWakZrV1dOR1dtaGhlbFpaVmtaak1XSXlWbk5YYmxKc1VqTlNjVmxyYUVOVFJteFdWMnM1VldKRmNERlZWbEpIVmpBeFYyTklXbUZTUlZwTFdsVmFhMlJXVm5OYVIyeG9UVEJLWVZZeFdtdGxhekZYVjFob2FWTkZOVmRaVkVwVFZsWldkR1ZIUms1U2JFcFlWakp6TlZack1YSlhWRXBhWVRGd2RsWXdaRVpsUjA1SlUyeGtWMUpWV1hwWGJGcGhaREZLVjFadVRtRlNNbWh2VkZab1EwNVdXWGxrUms1VFRWVndNRlp0ZUd0V01rcElaVWM1Vm1KWWFFeFpha1pUVjBkV1JtUkdhR2xTTVVwWlZqSjBVMVV5UlhkTlZtaFdZVEpvWVZsVVNtOVdSbHBJWlVkR2FtRjZWbGxWYlhocllWWmFSbFpZWkZkaVZFVXdWbTB4VjFkR1duSlhiRUpYWWxaS1ZWZFdVazlSYlZGNFdraEtWMkpGTlZaVVZscHpUbFpWZVdWR1pGZE5hM0JIVlRKNGIxWXlSWGhYYldoV1pXdGFNMVZzV2tkV1ZrcHpWR3hrYUdWc1dUSldNVkpEWVRKSmVGVnVUbGhpYkVwUlZtdGFkMWRHYkhOaFJ6bFhVbXhhZUZWdGN6RmlSa3AwVld4d1dsWlhVa2hXYTFwTFYxWkdjMUZzWkdsV1JWVjNWMnRTUjJFeFNYaFhibFpWWWtkb2NGbHNXa3RXYkZwMFRVaG9WazFYVW5wWlZFNXJWakpHY2xOc2FGcFhTRUpJV2xkNFZtVlhVa2hQVm1ST1ZtMDRlVlp0TVRCaU1WbDVVbTVLYWxKWGFGWlpiRkpIVkVaV2NWTnJkRk5OVjFJd1dXdGFiMVV5Ulhsa2VrcFhZV3R2ZDFsVVFURlNNa3BIV2taU1dGSXlhSGhXVjNoaFdWWlplR0pJU2xoaE0xSldWRlprTkdWV1duUmxTR1JWWWtWd01GWlhlRzlXTVZsNlZGUkdXbFl6VGpSWk1uaHJZekpHUjFkck5XbGlWMmgyVmpGYWEwNUdVWGhUYms1VlltczFXVmxyWkZOalJsWnhVbXQwVjFKc2NFaFdiVEZIWVRBeFZtTkdhRlpOYWxaUVZtdGtTMWRYUmtkVmJGWlhWbTVCZWxaWWNFZFhiVlpZVld0b1UySllVazlXYlRFelRWWmFXR1ZIT1dwTmExWXpWRlZvZDFWdFNraGhSbVJhVmpOTmVGcEhlSEpsUm1SelZHMXdUbFl4U1hkWGExWnJaREpHU0ZadVNsaGlWVnBZVm01d1JrMUdXa1ZUYTJSWFRWVTFlbFp0ZUd0aFZscElaVVpzVjJKWVFsQlZWRVpYVWpKS1NWSnNTbGhTTW1oNFZrWmtlazFXVGtkaVJscGhVa1pLVjFSVlVrZFRSbXQzWVVoT1YwMXJjRlpWYkZKRFYwWmFkRlZzYUZwbGEzQkhXbGQ0ZDFOR1NuTlZiRTVYVW14d1lWWnRkR0ZaVm14WVZWaGtUbFp0VWxoWmEyUlRWakZzVlZSc1RsaFNiRXBYVmxkMGExZEdXbk5qUm1oYVZsZFJkMVpxUVhoU1ZrcHhVbXhrVTJKWGFESldiWEJMVXpGa1YxVnVSbFppUm5CUFZtcEdTMU5XV2xWUmJYUlVUVlZzTkZaWE5WTmhWa3AwWVVaU1ZWWjZSblpYVmxwaFpFZE9SbHBHY0ZkTlJsbDZWa1phVjJFeFdsZGFSV2hzVW14S1lWWnJWbmRXUmxsNFYyeHdhMDFZUWtoV1IzaHZWVEpLV1ZvelpGZFNiSEJvVmtSR1lXTXhUblZWYlhoVVVqTm9XbGRXVWtkVE1WcEhZa2hLV0dFelVuRlVWbHAzWlVaYVdHVkhkRmROUkVJMFZUSjRSMWRHV25OWGJXaFdaV3R3VDFwV1dsTmpiSEJJWTBaT2FWWnJjRlpXYTFwVFVURk5lVk5ZYUZoaWJFcHhWV3hrVTFaV2JITlhiVVpzWWtaYU1GUnNWakJXTWtwV1kwVndWbFl6YUhaWFZscGFaV3hXZEdGR1drNVdia0p2VjJ0V1ZtVkdXbGRXYms1V1lYcFdjRlZzYUVOWGJGcHhVMnBDYVUxV1JqVlZiVFZQVmtaa1NHVklUbFppVkVaMlZtcEdjMk5zWkhWYVJUVnBVbXR3V2xkc1ZtRmtNa3BIVTFoa1dHRXpRbGxaVkVaM1ZVWmFTRTFWWkU5aVJYQldWVmQ0YTFSdFNuTlRiR3hZVmpOQ1NGWnRNVmRTTWs1R1YyMXNVMkV6UW5kV1YzaFRWakpHUjFkdVVtdFNiSEJQVm1wR1MyVnNXWGxPVldSV1RXdHdWMVl5TlV0V01rWnlVbGhvVmsxdWFHaFZNR1JYVWpGd1IxZHJOV2hOTUVwTFZqSjBiMlF4U1hoYVJXaFVZVEpTV1ZsdGRHRldiR3h5V2taT1ZGSnNjREJaZWs1dlYwWmFjazVZY0ZwV1YxSjZXVlprUm1ReVRraFBWbVJvVFZoQ1dWWXhXbXRWYlZaWFYyNVdWV0pIYUhCVmFrcHZWVVphZEdWSGRGWk5helZZV1d0b1MxWXhXa1pYYms1WFlsUldSRlZxUmxwbFZURldXa2RvVTJKSVFqVlhWM1JUVmpGa2MxZHNaR3BTYldoWVZGVmFkMk5zVlhoWGEyUnFZbFZhU1ZWdGVFOVZNVnAxVVcwNVYwMXVhRmhaVkVaU1pVWk9kVlJ0UmxSU2EzQjVWbGN4ZWsxV1VYaFZiR1JYWW0xU1QxUldXbmRsYkdSeVlVZDBWMVpVUm5sWmExSlRWMjFGZUdOSVNsZE5SMUpNVldwR2EyTXhXbk5hUlRWVFRWVnZlVlp0ZEZOU01WbDVWV3RvVjJFeWVHaFZiWGhMVmtac2NscEVUazVXYlZKV1ZWY3hNRlV3TVZkaVJFNVZWbXh3ZGxadE1VWmxWMVpIWVVaa2FHRjZWakpYYkdRMFYyMVdWazFXV2xoaVdHaFlXV3RhZG1WR1duRlRhbEpvVFZaV05GWXlOVmRWYkdSSlVXeG9XbUpIYUVSVk1GcDNVbFpLY21OSGVGTmlSbTk0Vm10amVHSXhWWGxUYkdSVVlteHdXRlZ0ZUhka2JGWllZek5vVTAxWFVqRldSM2h2WVZaa1IxTnNSbGRXZWtWM1ZtcEJNVkl5U2tsVGJHaHBWbFp3VjFkWGRHdFZNVWw0VjFoc1QxWlZOVmhaYkZaM1UxWnNWbUZIUmxkTmExcDVWakl4YjFkck1YVmhSMmhoVWxad1RGcEZaRTlUUjBwSFZHMXNhRTFJUWtwV2JURTBWVEZOZDA1VlpGWlhSM2hVVmpCa2IxWldiSFJrU0dSV1VteHdlVlp0TVVkWFJrcDBaVWh3V2xaWFRURlpWVnBMWkVkV1IyRkdhR2hOVm5CdlYxWlNRbVZIVG5KT1ZscHFVbTFvYjFSV2FFTk5iRnAwWTBWMFYwMXJOWHBXTW5oeldWWktkRlZyT1ZkaVZGWkVXbFphWVdOc2EzcGhSbVJPVmxkM01GWnJZekZVTWtaWFUxaHNiRkpzU2xaV2JGcDNUVEZhZEdWSFJsaFNNVnBJVmtkNGExUnRTa1pYVkVKWFlXdHZNRmxxU2tkak1VNXpZVVphYVZaV2NGbFhWM2h2VkcxV1IxZFlaRmhpU0VKelZtcEdTMU5XVVhoWGJHUm9WbXR3TVZWWGRITldNVnBHWWtST1ZXSkdjSEphUlZwTFYxZEdSMXBHYUZOTmJXaFpWbXRhVjFsWFVYaGFSV1JxVWxad1dGWXdaRzlXUmxwMFpFaGtiR0pIVW5sWGEyaFBWakF4V0ZWclpGWk5ibWgyVm1wS1MxTkdVbkZVYkZaWFlsWktWRmRzVm1Ga01VNVhWbTVPWVZJeWVHOVVWRUpMV1ZaWmVGZHRkR3hoZWtaWVYydFdhMkZXVGtaT1Z6bFdZbTVDZWxscVJsZGtSVEZWVVdzNVUySkhkekZYYkZaclRVZEdSazFXV21sU1JUVllWRmMxVTJSc1dYbGxSMFpYVFdzMVNGVlhlR3RoUjBWNFkwVXhXRlpGYkRSVmVrWkxWakZ3U1ZSdFJsTk5iV2gyVmtaYWIxRnRWbGRYV0d4clVtczFWRlJXVm5kTlJscDBaRWQwV2xacmNEQmFWV2hEVm0xS1ZWSnNVbHBOUm5CWVdURmFUMlJGT1ZkYVJUVlhUVlZ3WVZacldtRlZNVlY0VjJ0YVRsWnRVbGxaYTJSdlYwWlNWMXBIT1dwaVIxSllWakowTUZVd01WWk9XSEJZWVRGd2NsbFdXbUZTYkdSelZteG9hVkpzY0c5V2JUQjRWakZKZUZkdVZsVmlWVnBVV1d4YVMxWldXblJrUm1SYVZtMVNTRll5TlZOVWJHUklWV3hrVlZadFVsUlZNVnBYWXpKR1NFOVdaRTVXYmtKSVZtcEplRkl4V1hsU1dHaFlZV3MxV0ZWc1duZGhSbkJHVmxob1YyRjZiRmhXUjNocllVVXdkMU5VU2xkaGEyOTNWMVprUm1WV1RuSmhSbEpvVFd4S2VGWlhlR0ZrTVdSSFZXeGtXR0p0VW05VmJURTBWbXhXZEdONlJtbFNiSEI2VlRKNGQxZHNXbGhWYTJoWFlURndURmw2U2s5U01YQkhZVVprVGsxVmNGcFdNblJUVWpGV2RGWnJhRlJoTW5oV1dXdGtiMkl4VWxWU2EzUldWbTFTV1ZwRlpEQldhekZZVld4b1drMUdXbWhYVmxwTFVteE9jMkZHVmxkV2EzQkpWbTF3UjFVeVRYaFhibEpRVm0xU1QxWnRNRFJsVmxwMFRWUlNWazFYVWpCVmJHaHZZV3hLV1ZWdGFGZGhhelYyVlRCYWMwNXNTblJTYlhCT1ZqRkpkMWRYZEdGaU1WVjVVbGh3VW1GcmNGaFpWM1IyWkRGa1YxZHVUbGROYTNCSVYydGtSMVV4V1hsaFJteFlWbXhLVEZaVVJtdFdNa3BIWWtkd1ZGSlVWbHBXVnpCNFRrWmFjMVpZYkdwU1ZHeFdXV3RXZDJWc2EzZFhiVVpYWVhwR01WVlhlRk5YYkZsNlZHcFNWMkZyY0ZCVmJURkxVakZrY2s1WGFHbFNia0pYVm1wR2EwMUdiRmRWV0doVVltczFWbGx0Y3pGWFZteHlXa1pPYVUxV1NsaFdNalZyVmxaYWRGVnVjRmROYWtaSVZtMXplRmRHVm5KaVJtUnBWMFpLYjFacVFtdFRNV1JZVW10a2FGSnVRbkJXTUZwTFZGWmFXV05GWkZwV2JIQllWa2MxUjFadFNrZGpSVGxhVmtWYU0xWXhXbUZXVmtwMFQxZDBUbFp1UWpaV2Frb3dXVlprU0ZOcmFHaFNiVkpoVm10V1lXRkdiRlpYYm1SVVVqRmFTVlZ0TVhkV01rWTJWbXBXVjJGcmJEUlVhMXBXWlZaS2NWZHNaR2xXVm5CYVZtMXdUMVV5VG5OVmJrcFlZa1p3YzFWdGN6RmxiR1J5V2toa1ZrMXNXakJhVlZwelZqSktWVlpxVGxaV1JVVjRWV3BHYTJNeFduTlViV3hVVWxWd05sWnNZM2hPUjFGNFdraE9hRTB5VW1oVk1GVXhWakZTVmxWclRrNU5WbFkxVkd4ak5WWXdNVmRpUkZwYVZsZG9hRlpxUm1GU2JHUnpXa2RHVjFadVFtOVhWRW8wWkRGSmVGcElUbWhTYXpWUFZteG9RbVZzV25GU2JVWldUVlpHTkZac2FHOVhSMHBJVlc1Q1ZtSlVSVEJaTUZwVFZsWk9jMVJ0Y0ZOaVdHaFhWbXRrTkZReFdYaFhibEpzVW01Q1lWbFhjekZqYkd4WFdrVmFiR0pHV25wV2JYaDNWMFpLTm1FemNGaFdla1YzVkZWYVlWTkdTbkZYYXpWVFpXeGFUbFpzVWt0bGF6bFdZMFJXYUUwd1JuVlRNVTV5VUZOamNFdFJQVDBuS1NrPScpKQ=='))'))